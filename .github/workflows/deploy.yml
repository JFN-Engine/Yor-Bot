name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  Deployment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: "."
          fetch-depth: 0
          show-progress: "true"

      - name: Create .env file
        run: |
          echo "DC_BOT_TOKEN=${{ secrets.DC_BOT_TOKEN }}" >> .env
          echo "DC_BOT_PUBLIC_KEY=${{ secrets.DC_BOT_PUBLIC_KEY }}" >> .env
          echo "DC_APP_ID=${{ secrets.DC_APP_ID }}" >> .env
          echo "DC_BOT_SECRET_KEY=${{ secrets.DC_BOT_SECRET_KEY }}" >> .env

      - name: Validate Files
        run: ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Container Build and Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/yor-bot-img:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/yor-bot-img:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIV_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/yor-bot-img:latest
            docker stop yor-bot-dc-container
            docker rm yor-bot-dc-container
            docker run -d --name yor-bot-dc-container nicodav28/yor-bot-img:latest

            if docker ps | grep yor-bot-dc-container; then
              echo "Container is running successfully"
            else
              echo "Failed to start container"
              exit 1
            fi

      - name: Prune System
        run: "echo y | docker system prune -a"
